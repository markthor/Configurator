// automatically generated by Xtext
grammar org.xtext.cfgdsl.CfgDsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/MDDP Configurator/model/Configurator.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	{Root}
	(configurators+=Configuration)*
	(expressions+=Expression)*;

Expression returns Expression:
	BinaryConstraint | Parameter | Set | StringValue |
	IntegerValue | BooleanValue | UnaryConstraint;

Value returns Value:
	StringValue | IntegerValue | BooleanValue;

Configuration returns Configuration:
	{Configuration}
	'cfg' (assignments+=Assignment ( "," assignments+=Assignment)*)?;

Assignment returns Assignment:
	'assign' parameter=[Parameter|EString] 'to' value=[Value|EString];

Parameter returns Parameter:
	'param' type=TypeEnum name=EString;

EString returns ecore::EString:
	STRING | ID;

enum TypeEnum returns TypeEnum:
	IntegerType = 'int' | BooleanType = 'boolean' | StringType = 'string';

StringValue returns StringValue:
	type=TypeEnum name=EString '=' value=EString;

IntegerValue returns IntegerValue:
	type=TypeEnum name=EString '=' value=EInt;

BooleanValue returns BooleanValue:
	type=TypeEnum name=EString '=' value=EBoolean;

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

BinaryConstraint returns BinaryConstraint:
	'bc' name=EString left=[Expression|EString] operator=BinaryOperators right=[Expression|EString] | 
	'bc' root=EBoolean name=EString left=[Expression|EString] operator=BinaryOperators right=[Expression|EString];

Set returns Set:
	'set' name=EString ('[' has+=[Value|EString] ( "," has+=[Value|EString])* ']' )?;

UnaryConstraint returns UnaryConstraint:
	'uc' name=EString Operator=UnaryOperators expression=[Expression|EString] ;

enum BinaryOperators returns BinaryOperators:
	less = 'less' | greater = 'greater' | equal = 'equal' | multiplication = 'multiplication' |
addition = 'addition' | subset = 'subset' | and = 'and' | or = 'or';

enum UnaryOperators returns UnaryOperators:
not = 'not';